IDENT
this
INT
IDENT
STRING
FLOAT
asm
>=
;
protected
while
||
INT
||
IDENT
return
instanceof
false
/
IDENT
INT
instanceof
STRING
.
FLOAT
false
==
protected
STRING
!=
protected
<=
%
!
&&
STRING
+
>=
if
+
FLOAT
readInt
STRING
INT
FLOAT
%
IDENT
INT
STRING
asm
&&
readFloat
IDENT
this
INT
IDENT
STRING
STRING
IDENT
FLOAT
IDENT
FLOAT
readInt
FLOAT
asm
println
println
printlnx
INT
INT
else
,
FLOAT
asm
asm
&&
STRING
STRING
FLOAT
INT
INT
IDENT
{
STRING
*
readFloat
*
+
return
FLOAT
IDENT
FLOAT
FLOAT
STRING
STRING
STRING
asm
&&
INT
INT
FLOAT
INT
asm
asm
IDENT
INT
printlnx
INT
)
<=
INT
IDENT
.
new
IDENT
INT
&&
IDENT
IDENT
}
==
IDENT
extends
STRING
FLOAT
new
IDENT
this
IDENT
print
<=
STRING
STRING
{
==
>=
!=
/
null
STRING
FLOAT
STRING
INT
FLOAT
class
new
STRING
{
*
FLOAT
true
)
/
printx
-
+
{
STRING
FLOAT
!
FLOAT
<
(
IDENT
-
+
>=
FLOAT
INT
IDENT
printx
IDENT
IDENT
STRING
==
INT
*
IDENT
!
FLOAT
STRING
%
STRING
FLOAT
if
STRING
FLOAT
{
INT
IDENT
}
if
INT
STRING
;
==
STRING
!
INT
FLOAT
||
FLOAT
+
-
>
STRING
IDENT
>=
<
!
INT
}
STRING
IDENT
.
STRING
new
STRING
*
true
{
+
null
FLOAT
print
asm
FLOAT
IDENT
*
STRING
println
{
FLOAT
true
STRING
INT
IDENT
INT
new
return
STRING
printx
{
||
IDENT
while
IDENT
=
==
IDENT
;
STRING
if
<
extends
FLOAT
FLOAT
FLOAT
IDENT
STRING
IDENT
IDENT
printx
IDENT
INT
INT
STRING
IDENT
INT
FLOAT
STRING
this
!=
protected
==
FLOAT
readFloat
new
STRING
INT
IDENT
;
*
FLOAT
println
INT
readInt
STRING
this
protected
print
IDENT
IDENT
printlnx
FLOAT
FLOAT
readInt
STRING
print
IDENT
FLOAT
FLOAT
IDENT
INT
INT
true
INT
INT
while
%
INT
INT
IDENT
true
INT
FLOAT
>
false
instanceof
}
>=
this
INT
.
)
STRING
IDENT
STRING
printx
IDENT
IDENT
(
FLOAT
FLOAT
IDENT
>=
==
false
printlnx
)
>
FLOAT
this
extends
FLOAT
extends
IDENT
>=
FLOAT
true
>=
INT
false
INT
INT
INT
println
*
=
IDENT
else
readInt
return
class
FLOAT
printx
}
&&
IDENT
!=
INT
!=
INT
IDENT
print
IDENT
this
FLOAT
FLOAT
=
STRING
FLOAT
,
STRING
.
FLOAT
if
IDENT
STRING
,
FLOAT
INT
instanceof
INT
INT
FLOAT
readFloat
IDENT
IDENT
STRING
IDENT
new
instanceof
}
IDENT
&&
INT
)
IDENT
<=
FLOAT
print
FLOAT
STRING
FLOAT
{
else
extends
-
if
IDENT
INT
printx
true
null
while
FLOAT
new
readFloat
protected
FLOAT
IDENT
INT
/
INT
}
INT
extends
IDENT
STRING
FLOAT
println
&&
STRING
}
protected
null
IDENT
IDENT
FLOAT
true
true
false
FLOAT
STRING
asm
INT
,
class
+
readFloat
STRING
IDENT
IDENT
