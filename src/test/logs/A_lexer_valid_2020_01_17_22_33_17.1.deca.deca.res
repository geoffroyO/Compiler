INT
asm
IDENT
FLOAT
IDENT
class
IDENT
INT
readFloat
STRING
readInt
extends
protected
null
IDENT
FLOAT
readInt
IDENT
FLOAT
INT
true
readFloat
print
INT
protected
STRING
STRING
printx
instanceof
readInt
instanceof
true
.
IDENT
true
IDENT
INT
IDENT
printx
INT
==
STRING
FLOAT
>=
FLOAT
FLOAT
else
instanceof
readInt
IDENT
INT
%
printx
INT
instanceof
INT
FLOAT
INT
new
INT
extends
INT
FLOAT
printx
IDENT
printx
IDENT
FLOAT
IDENT
!
INT
STRING
readInt
return
readInt
&&
IDENT
{
class
,
print
!
!=
while
!=
!
IDENT
INT
class
STRING
STRING
class
IDENT
print
STRING
new
)
INT
!
>=
STRING
{
instanceof
print
,
STRING
INT
INT
null
INT
if
instanceof
class
class
STRING
STRING
asm
printx
FLOAT
STRING
FLOAT
>
<
FLOAT
printlnx
*
/
,
=
>=
INT
printx
INT
;
while
IDENT
instanceof
FLOAT
INT
;
INT
IDENT
else
asm
false
&&
FLOAT
false
STRING
INT
IDENT
INT
FLOAT
!=
IDENT
IDENT
STRING
FLOAT
!
!=
FLOAT
printlnx
if
==
;
<
IDENT
STRING
{
STRING
if
IDENT
FLOAT
asm
FLOAT
%
{
null
print
IDENT
IDENT
STRING
extends
printx
return
FLOAT
*
true
printx
)
(
IDENT
,
STRING
IDENT
IDENT
INT
,
return
IDENT
IDENT
%
else
IDENT
FLOAT
INT
FLOAT
INT
STRING
IDENT
readInt
>
this
=
protected
<
extends
IDENT
;
INT
FLOAT
<
return
<=
IDENT
||
readInt
INT
!
+
+
new
IDENT
print
INT
STRING
STRING
INT
.
printx
IDENT
!
class
STRING
class
IDENT
IDENT
!
IDENT
protected
null
>=
printlnx
;
,
IDENT
asm
!
>=
INT
true
protected
INT
,
FLOAT
return
{
INT
readInt
,
>
STRING
)
IDENT
-
print
FLOAT
FLOAT
<
;
FLOAT
STRING
while
else
.
(
STRING
IDENT
FLOAT
printlnx
<
STRING
-
+
extends
false
IDENT
new
FLOAT
!=
STRING
INT
*
(
null
FLOAT
return
IDENT
=
)
readFloat
FLOAT
FLOAT
INT
<
STRING
protected
asm
INT
INT
FLOAT
IDENT
INT
FLOAT
FLOAT
IDENT
printx
readFloat
STRING
asm
FLOAT
else
return
INT
&&
STRING
STRING
FLOAT
STRING
IDENT
new
if
IDENT
IDENT
this
<=
print
<=
<
