this
IDENT
-
%
-
STRING
/
FLOAT
IDENT
INT
print
/
INT
FLOAT
printx
!
IDENT
>=
INT
IDENT
this
INT
IDENT
printlnx
else
FLOAT
print
STRING
||
println
INT
println
INT
STRING
instanceof
/
)
while
}
!=
FLOAT
while
FLOAT
INT
if
FLOAT
INT
{
STRING
while
while
INT
IDENT
)
*
IDENT
if
IDENT
return
FLOAT
STRING
readFloat
IDENT
true
>
-
FLOAT
STRING
true
IDENT
FLOAT
/
>
null
{
protected
<
INT
*
INT
FLOAT
<=
IDENT
printlnx
/
FLOAT
FLOAT
readInt
readFloat
STRING
readInt
INT
=
INT
INT
readInt
FLOAT
FLOAT
STRING
println
FLOAT
<=
readFloat
!
<=
readInt
INT
printlnx
<
IDENT
while
IDENT
IDENT
>
FLOAT
INT
instanceof
protected
&&
instanceof
STRING
}
STRING
INT
INT
STRING
STRING
STRING
STRING
IDENT
!=
{
==
{
true
IDENT
FLOAT
INT
FLOAT
STRING
FLOAT
IDENT
print
printx
STRING
STRING
IDENT
extends
print
INT
INT
==
INT
+
>
<
printlnx
INT
IDENT
extends
false
INT
INT
STRING
INT
INT
!
readInt
IDENT
IDENT
FLOAT
printlnx
=
if
+
FLOAT
IDENT
FLOAT
||
IDENT
!
INT
INT
return
new
!=
)
extends
<
FLOAT
readFloat
INT
STRING
STRING
new
print
IDENT
STRING
STRING
INT
readFloat
while
STRING
FLOAT
STRING
{
IDENT
printlnx
new
FLOAT
FLOAT
*
IDENT
if
INT
STRING
FLOAT
==
if
IDENT
<
>=
FLOAT
STRING
STRING
STRING
STRING
printlnx
this
INT
>=
FLOAT
instanceof
!
INT
IDENT
>
-
STRING
STRING
INT
STRING
FLOAT
readInt
STRING
STRING
!
)
,
<
IDENT
*
INT
FLOAT
)
<
INT
IDENT
FLOAT
println
IDENT
IDENT
INT
IDENT
extends
class
readInt
FLOAT
extends
INT
false
!
%
{
INT
FLOAT
IDENT
IDENT
/
STRING
STRING
false
FLOAT
STRING
IDENT
IDENT
STRING
STRING
new
FLOAT
this
false
readInt
new
FLOAT
>=
class
STRING
!=
IDENT
IDENT
IDENT
INT
FLOAT
instanceof
print
}
}
,
IDENT
true
INT
INT
INT
INT
else
!
<=
INT
FLOAT
class
IDENT
{
(
INT
!=
IDENT
if
printx
INT
else
FLOAT
%
-
IDENT
IDENT
INT
this
printlnx
FLOAT
protected
<=
FLOAT
FLOAT
extends
asm
(
-
IDENT
!=
INT
)
FLOAT
extends
!
null
return
IDENT
this
FLOAT
;
||
;
IDENT
FLOAT
INT
INT
INT
INT
IDENT
FLOAT
>=
IDENT
INT
IDENT
IDENT
IDENT
INT
println
INT
IDENT
new
false
)
IDENT
INT
INT
INT
instanceof
STRING
INT
STRING
>
!
||
.
STRING
println
asm
STRING
{
while
printlnx
>
IDENT
INT
IDENT
||
;
*
FLOAT
printlnx
this
IDENT
/
if
=
FLOAT
new
>
.
printx
-
STRING
INT
INT
FLOAT
==
FLOAT
true
STRING
IDENT
==
IDENT
if
)
class
STRING
IDENT
IDENT
)
IDENT
*
STRING
{
println
STRING
.
STRING
readFloat
>
FLOAT
||
+
*
IDENT
printlnx
INT
IDENT
-
.
FLOAT
FLOAT
STRING
FLOAT
print
this
IDENT
INT
;
INT
(
.
false
STRING
STRING
readFloat
IDENT
STRING
!
{
FLOAT
INT
.
INT
FLOAT
INT
/
STRING
-
IDENT
FLOAT
this
INT
)
IDENT
<=
return
FLOAT
>
FLOAT
INT
instanceof
IDENT
IDENT
-
(
STRING
==
printlnx
||
false
INT
<=
FLOAT
